{"ast":null,"code":"/* eslint-disable no-restricted-syntax */\nconst EXTRA_OFFSET = 300;\n\nconst isInViewport = el => {\n  const rect = el.getBoundingClientRect();\n  const windowHeight = window.innerHeight;\n  const windowWidth = window.innerWidth;\n  const {\n    clientHeight,\n    clientWidth\n  } = document.documentElement;\n  const rectHeightOffset = rect.bottom - rect.top + EXTRA_OFFSET;\n  const rectWidthOffset = rect.right - rect.left + EXTRA_OFFSET;\n  return rect.top >= 0 - rectHeightOffset && rect.left >= 0 - rectWidthOffset && rect.bottom <= (windowHeight || clientHeight) + rectHeightOffset && rect.right <= (windowWidth || clientWidth) + rectWidthOffset;\n};\n\nconst applyImageFadeInTransition = () => {\n  let images = [];\n  images = document.querySelectorAll('img:not([role=\"presentation\"])'); // eslint-disable-next-line prefer-const\n\n  for (let image of images) {\n    if (isInViewport(image)) {\n      image.style.opacity = 1;\n    } else {\n      image.onload = () => {\n        image.style.opacity = 1;\n      };\n    }\n  }\n};\n\nexport default applyImageFadeInTransition;","map":null,"metadata":{},"sourceType":"module"}